{
    "name": "rust-analyzer",
    "displayName": "rust-analyzer",
    "description": "Rust 语言 Visual Studio Code 支持",
    "private": true,
    "icon": "icon.png",
    "version": "0.5.0-dev",
    "releaseTag": null,
    "publisher": "rust-lang",
    "repository": {
        "url": "https://github.com/rust-lang/rust-analyzer.git",
        "type": "git"
    },
    "homepage": "https://rust-analyzer.github.io/",
    "license": "MIT OR Apache-2.0",
    "keywords": [
        "rust"
    ],
    "categories": [
        "Formatters",
        "Programming Languages"
    ],
    "capabilities": {
        "untrustedWorkspaces": {
            "supported": false,
            "description": "rust-analyzer 会调用由其配置设置的二进制文件以及 Rust 工具链的二进制文件。恶意行为者可以利用这一点在你的机器上运行任意代码。"
        }
    },
    "engines": {
        "vscode": "^1.83.0"
    },
    
    "scripts": {
        "vscode:prepublish": "npm run build-base -- --minify",
        "package": "vsce package -o rust-analyzer.vsix",
        "build-base": "esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node16",
        "build": "npm run build-base -- --sourcemap",
        "watch": "npm run build-base -- --sourcemap --watch",
        "format": "prettier --write .",
        "format:check": "prettier --check .",
        "lint": "eslint -c .eslintrc.js --ext ts ./src ./tests",
        "lint:fix": "npm run lint -- --fix",
        "typecheck": "tsc",
        "pretest": "npm run typecheck && npm run build",
        "test": "node ./out/tests/runTests.js"
    },
    "dependencies": {
        "@hpcc-js/wasm": "^2.13.0",
        "anser": "^2.1.1",
        "d3": "^7.8.5",
        "d3-graphviz": "^5.0.2",
        "vscode-languageclient": "^9.0.1"
    },
    "devDependencies": {
        "@tsconfig/strictest": "^2.0.1",
        "@types/node": "~16.11.7",
        "@types/vscode": "~1.83",
        "@typescript-eslint/eslint-plugin": "^6.0.0",
        "@typescript-eslint/parser": "^6.0.0",
        "@vscode/test-electron": "^2.3.8",
        "@vscode/vsce": "^3.0.0",
        "esbuild": "^0.18.12",
        "eslint": "^8.44.0",
        "eslint-config-prettier": "^8.8.0",
        "ovsx": "^0.8.2",
        "prettier": "^3.0.0",
        "tslib": "^2.6.0",
        "typescript": "^5.6.0"
    },
    "activationEvents": [
        "workspaceContains:Cargo.toml",
        "workspaceContains:*/Cargo.toml",
        "workspaceContains:rust-project.json",
        "workspaceContains:*/rust-project.json",
        "workspaceContains:.rust-project.json",
        "workspaceContains:*/.rust-project.json"
    ],
    "main": "./out/main",
    "contributes": {
        "taskDefinitions": [
            {
                "type": "cargo",
                "required": [
                    "command"
                ],
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "env": {
                        "type": "object",
                        "patternProperties": {
                            ".+": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "rust-analyzer.syntaxTree",
                "title": "显示语法树",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.viewHir",
                "title": "查看Hir",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.viewMir",
                "title": "查看Mir",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.interpretFunction",
                "title": "解释执行",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.viewFileText",
                "title": "查看文件文本（服务器视角）",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.viewItemTree",
                "title": "调试ItemTree",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.memoryUsage",
                "title": "内存使用（清除数据库）",
                "category": "rust-analyzer (调试命令)"
            },
            {
                "command": "rust-analyzer.viewCrateGraph",
                "title": "查看Crate图",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.viewFullCrateGraph",
                "title": "查看完整Crate图",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.expandMacro",
                "title": "在光标处递归展开宏",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.matchingBrace",
                "title": "查找匹配的大括号",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.parentModule",
                "title": "定位父模块",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.joinLines",
                "title": "合并行",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.run",
                "title": "运行",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.copyRunCommandLine",
                "title": "复制运行命令行",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.debug",
                "title": "调试",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.newDebugConfig",
                "title": "生成启动配置",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.analyzerStatus",
                "title": "状态",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.reloadWorkspace",
                "title": "重新加载工作区",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.rebuildProcMacros",
                "title": "重建过程宏和构建脚本",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.restartServer",
                "title": "重启服务器",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.startServer",
                "title": "启动服务器",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.stopServer",
                "title": "停止服务器",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.onEnter",
                "title": "增强回车键",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.ssr",
                "title": "结构搜索替换",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.serverVersion",
                "title": "显示RA版本",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.openDocs",
                "title": "打开文档",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.openExternalDocs",
                "title": "打开外部文档",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.openCargoToml",
                "title": "打开Cargo.toml",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.peekTests",
                "title": "预览相关测试",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.moveItemUp",
                "title": "向上移动项",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.moveItemDown",
                "title": "向下移动项",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.cancelFlycheck",
                "title": "取消运行中的飞检",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.runFlycheck",
                "title": "运行飞检",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.clearFlycheck",
                "title": "清除飞检诊断",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.revealDependency",
                "title": "显示依赖文件",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.viewMemoryLayout",
                "title": "查看内存布局",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.toggleCheckOnSave",
                "title": "切换保存时检查",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.toggleLSPLogs",
                "title": "切换LSP日志",
                "category": "rust-analyzer"
            },
            {
                "command": "rust-analyzer.openWalkthrough",
                "title": "打开教程",
                "category": "rust-analyzer"
            }
        ],
        "keybindings": [
            {
                "command": "rust-analyzer.parentModule",
                "key": "ctrl+shift+u",
                "when": "editorTextFocus && editorLangId == rust"
            },
            {
                "command": "rust-analyzer.joinLines",
                "key": "ctrl+shift+j",
                "when": "editorTextFocus && editorLangId == rust"
            }
        ],
        "configuration": [
            {
                "title": "general",
                "properties": {
                    "rust-analyzer.restartServerOnConfigChange": {
                    "markdownDescription": "当更改需要重启的某些设置时，是否自动重启服务器。",
                    "default": false,
                    "type": "boolean"
                },
                "rust-analyzer.showUnlinkedFileNotification": {
                    "markdownDescription": "是否显示未链接文件的通知，提示用户将相应的 Cargo.toml 添加到链接项目设置中。",
                    "default": true,
                    "type": "boolean"
                },
                "rust-analyzer.showRequestFailedErrorNotification": {
                    "markdownDescription": "是否显示失败请求的错误通知。",
                    "default": true,
                    "type": "boolean"
                },
                "rust-analyzer.showDependenciesExplorer": {
                    "markdownDescription": "是否显示依赖视图。",
                    "default": true,
                    "type": "boolean"
                },
                "rust-analyzer.testExplorer": {
                    "markdownDescription": "是否显示测试浏览器。",
                    "default": false,
                    "type": "boolean"
                },
                "rust-analyzer.initializeStopped": {
                    "markdownDescription": "扩展激活时不启动 rust-analyzer 服务器。",
                    "default": false,
                    "type": "boolean"
                }
                }
            },
            {
                "title": "runnables",
                "properties": {
                    "rust-analyzer.runnables.extraEnv": {
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "platform": {
                                            "type": [
                                                "null",
                                                "string",
                                                "array"
                                            ],
                                            "default": null,
                                            "markdownDescription": "平台过滤，如 \"win32\" 或 [\"linux\", \"win32\"]。查看 [process.platform](https://nodejs.org/api/process.html#processplatform) 的值。"
                                        },
                                        "mask": {
                                            "type": "string",
                                            "description": "可运行名称掩码"
                                        },
                                        "env": {
                                            "type": "object",
                                            "description": "形式为 { \"key\": \"value\"} 的变量"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "object",
                                "description": "形式为 { \"key\": \"value\"} 的变量"
                            }
                        ],
                        "default": null,
                        "markdownDescription": "通过 `Test` 或 `Debug` 镜头启动的可运行程序，或使用 `rust-analyzer.run` 命令时传递的环境变量。"
                    },
                    "rust-analyzer.runnables.problemMatcher": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "$rustc"
                        ],
                        "markdownDescription": "用于 `rust-analyzer.run` 命令的问题匹配器，例如 `[\"$rustc\", \"$rust-panic\"]`。"
                    }
                }
            },
            {
                "title": "statusBar",
                "properties": {
                    "rust-analyzer.statusBar.clickAction": {
                        "type": "string",
                        "enum": [
                            "stopServer",
                            "openLogs"
                        ],
                        "enumDescriptions": [
                            "停止服务器",
                            "打开日志"
                        ],
                        "default": "openLogs",
                        "markdownDescription": "点击扩展状态栏项目时要执行的操作。"
                    }
                }
            },
            {
                "title": "server",
                "properties": {
                    "rust-analyzer.server.path": {
                        "type": [
                            "null",
                            "string"
                        ],
                        "scope": "machine-overridable",
                        "default": null,
                        "markdownDescription": "rust-analyzer可执行文件的路径（默认指向捆绑的二进制文件）。"
                    },
                    "rust-analyzer.server.extraEnv": {
                        "type": [
                            "null",
                            "object"
                        ],
                        "additionalProperties": {
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "default": null,
                        "markdownDescription": "将传递给rust-analyzer可执行文件的额外环境变量。对于传递例如`RA_LOG`进行调试很有用。"
                    }
                }
            },
            {
                "title": "trace",
                "properties": {
                    "rust-analyzer.trace.server": {
                        "type": "string",
                        "scope": "window",
                        "enum": [
                            "off",
                            "messages",
                            "verbose"
                        ],
                        "enumDescriptions": [
                            "不跟踪",
                            "仅错误",
                            "完整日志"
                        ],
                        "default": "off",
                        "description": "跟踪对rust-analyzer的请求（这通常会过于冗长，不推荐普通用户使用）。"
                    },
                    "rust-analyzer.trace.extension": {
                        "description": "启用VS Code扩展自身的日志记录。",
                        "markdownDeprecationMessage": "日志级别现在由[Developer: Set Log Level...](command:workbench.action.setLogLevel)命令控制。您可以在那里设置当前会话的日志级别以及默认的日志级别。当Rust Analyzer Client可见时，您也可以通过点击OUTPUT标签上的齿轮图标来设置，或者通过向VS Code传递--log rust-lang.rust-analyzer:debug参数来实现。",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            {
                "title": "debug",
                "properties": {
                    "rust-analyzer.debug.engine": {
                        "type": "string",
                        "enum": [
                            "auto",
                            "llvm-vs-code-extensions.lldb-dap",
                            "vadimcn.vscode-lldb",
                            "ms-vscode.cpptools",
                            "webfreak.debug"
                        ],
                        "default": "auto",
                        "description": "首选的调试引擎。",
                        "markdownEnumDescriptions": [
                            "使用以下扩展中第一个可用的：[LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap)、[CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)、[C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)和[Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug)。",
                            "使用[LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap)。",
                            "使用[CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)。",
                            "使用[C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)。",
                            "使用[Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug)。"
                        ]
                    },
                    "rust-analyzer.debug.sourceFileMap": {
                        "type": [
                            "object",
                            "string"
                        ],
                        "const": "auto",
                        "description": "可选的源文件映射，传递给调试引擎。",
                        "default": {
                            "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
                        }
                    },
                    "rust-analyzer.debug.openDebugPane": {
                        "markdownDescription": "是否在开始调试时打开`调试面板`。",
                        "type": "boolean",
                        "default": false
                    },
                    "rust-analyzer.debug.buildBeforeRestart": {
                        "markdownDescription": "是否在再次调试同一个测试前重建项目模块。",
                        "type": "boolean",
                        "default": false
                    },
                    "rust-analyzer.debug.engineSettings": {
                        "type": "object",
                        "default": {},
                        "markdownDescription": "传递给调试引擎的可选设置。示例：`{ \"lldb\": { \"terminal\":\"external\"} }`"
                    }
                }
            },
            {
                "title": "typing",
                "properties": {
                    "rust-analyzer.typing.continueCommentsOnNewline": {
                        "markdownDescription": "在注释后的新行是否添加相应的注释前缀。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.previewRustcOutput": {
                        "markdownDescription": "是否显示诊断消息渲染后的rustc输出的主要部分。",
                        "default": false,
                        "type": "boolean"
                    },
                    "rust-analyzer.diagnostics.useRustcErrorCode": {
                        "markdownDescription": "是否使用原始的rustc错误代码显示诊断。如果设置为false，所有的rustc诊断将使用代码'rustc(点击查看完整编译器诊断)'",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "assist",
                "properties": {
                    "rust-analyzer.assist.emitMustUse": {
                        "markdownDescription": "为枚举变体生成`as_`方法时是否插入#[must_use]。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "assist",
                "properties": {
                    "rust-analyzer.assist.expressionFillDefault": {
                        "markdownDescription": "在辅助功能中用于缺失表达式的占位符表达式。",
                        "default": "todo",
                        "type": "string",
                        "enum": [
                            "todo",
                            "default"
                        ],
                        "enumDescriptions": [
                            "用`todo`宏填充缺失的表达式",
                            "用合理的默认值填充缺失的表达式，例如`new`或`default`构造函数。"
                        ]
                    }
                }
            },
            {
                "title": "assist",
                "properties": {
                    "rust-analyzer.assist.termSearch.borrowcheck": {
                        "markdownDescription": "为术语搜索代码辅助功能启用借用检查。如果设置为false，也会有更多的建议，但其中一些可能不会进行借用检查。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "assist",
                "properties": {
                    "rust-analyzer.assist.termSearch.fuel": {
                        "markdownDescription": "辅助功能中的术语搜索燃料工作单位（默认为1800）。",
                        "default": 1800,
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            {
                "title": "cachePriming",
                "properties": {
                    "rust-analyzer.cachePriming.enable": {
                        "markdownDescription": "在项目加载时预热缓存。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cachePriming",
                "properties": {
                    "rust-analyzer.cachePriming.numThreads": {
                        "markdownDescription": "处理预热缓存的工作线程数量。默认值`0`表示自动选择。",
                        "default": "physical",
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 255
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "physical",
                                    "logical"
                                ],
                                "enumDescriptions": [
                                    "使用物理核心数量",
                                    "使用逻辑核心数量"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.allTargets": {
                        "markdownDescription": "向cargo调用传递`--all-targets`参数。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.autoreload": {
                        "markdownDescription": "在`Cargo.toml`或`.cargo/config.toml`变更时，通过`cargo metadata`自动刷新项目信息。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.buildScripts.enable": {
                        "markdownDescription": "运行构建脚本（`build.rs`）以进行更精确的代码分析。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.buildScripts.invocationStrategy": {
                        "markdownDescription": "指定运行构建脚本命令时使用的调用策略。\n如果设置为`per_workspace`，则命令将为每个Rust工作空间执行，工作空间作为工作目录。\n如果设置为`once`，则命令将执行一次，打开的项目作为工作目录。\n此配置仅在设置`#rust-analyzer.cargo.buildScripts.overrideCommand#`时生效。",
                        "default": "per_workspace",
                        "type": "string",
                        "enum": [
                            "per_workspace",
                            "once"
                        ],
                        "enumDescriptions": [
                            "命令将为每个Rust工作空间执行，工作空间作为工作目录。",
                            "命令将执行一次，打开的项目作为工作目录。"
                        ]
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.buildScripts.overrideCommand": {
                        "markdownDescription": "覆盖rust-analyzer用于运行构建脚本和构建过程宏的命令。命令需要输出json，因此应包含`--message-format=json`或类似的选项。\n\n如果有多个链接的项目/工作空间，此命令将为每个项目/工作空间调用，工作目录为工作空间根目录（即包含`Cargo.toml`的文件夹）。这可以通过更改`#rust-analyzer.cargo.buildScripts.invocationStrategy#`来覆盖。\n\n默认情况下，将为配置的目标和特性构建一个cargo调用，以下为基础命令行：\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets --keep-going\n```\n。",
                        "default": null,
                        "type": [
                            "null",
                            "array"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.buildScripts.rebuildOnSave": {
                        "markdownDescription": "当过程宏或构建脚本源代码变更并保存时，重新运行过程宏构建/构建脚本。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.buildScripts.useRustcWrapper": {
                        "markdownDescription": "运行构建脚本时使用`RUSTC_WRAPPER=rust-analyzer`以避免检查不必要的事项。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.cfgs": {
                        "markdownDescription": "要启用的cfg选项列表及其给定值。",
                        "default": {
                            "miri": null,
                            "debug_assertions": null
                        },
                        "type": "object"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.extraArgs": {
                        "markdownDescription": "传递给每个cargo调用的额外参数。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.extraEnv": {
                        "markdownDescription": "在工作空间内运行cargo、rustc或其他命令时将设置的额外环境变量。设置RUSTFLAGS很有用。",
                        "default": {},
                        "type": "object"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.features": {
                        "markdownDescription": "要激活的功能列表。\n\n设置为`\"all\"`以向cargo传递`--all-features`。",
                        "default": [],
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "all"
                                ],
                                "enumDescriptions": [
                                    "向cargo传递`--all-features`"
                                ]
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.noDefaultFeatures": {
                        "markdownDescription": "是否向cargo传递`--no-default-features`。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.sysroot": {
                        "markdownDescription": "相对于sysroot的路径，或设置为\"discover\"以尝试通过\n\"rustc --print sysroot\"自动找到它。\n\n取消设置此选项将禁用sysroot加载。\n\n此选项在rust-analyzer重启后生效。",
                        "default": "discover",
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.sysrootSrc": {
                        "markdownDescription": "相对于sysroot库源的路径。如果未设置，默认为\n`{cargo.sysroot}/lib/rustlib/src/rust/library`。\n\n此选项在rust-analyzer重启后生效。",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.target": {
                        "markdownDescription": "编译目标覆盖（目标三元组）。",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "cargo",
                "properties": {
                    "rust-analyzer.cargo.targetDir": {
                        "markdownDescription": "rust-analyzer特定目标目录的可选路径。\n这可以防止rust-analyzer的`cargo check`和初始构建脚本和过程宏\n构建锁定`Cargo.lock`，代价是复制构建工件。\n\n设置为`true`以使用现有目标目录的子目录，或\n设置为相对于工作空间的路径以使用该路径。",
                        "default": null,
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                }
            },
            {
                "title": "cfg",
                "properties": {
                    "rust-analyzer.cfg.setTest": {
                        "markdownDescription": "为本地crates设置`cfg(test)`。默认为true。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "general",
                "properties": {
                    "rust-analyzer.checkOnSave": {
                        "markdownDescription": "保存时运行检查命令以获取诊断。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.allTargets": {
                        "markdownDescription": "检查所有目标和测试（`--all-targets`）。默认为\n`#rust-analyzer.cargo.allTargets#`。",
                        "default": null,
                        "type": [
                            "null",
                            "boolean"
                        ]
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.command": {
                        "markdownDescription": "用于`cargo check`的Cargo命令。",
                        "default": "check",
                        "type": "string"
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.extraArgs": {
                        "markdownDescription": "传递给`cargo check`的额外参数。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.extraEnv": {
                        "markdownDescription": "运行`cargo check`时将设置的额外环境变量。\n扩展`#rust-analyzer.cargo.extraEnv#`。",
                        "default": {},
                        "type": "object"
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.features": {
                        "markdownDescription": "要激活的功能列表。默认为\n`#rust-analyzer.cargo.features#`。\n\n设置为`\"all\"`以向Cargo传递`--all-features`。",
                        "default": null,
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "all"
                                ],
                                "enumDescriptions": [
                                    "向cargo传递`--all-features`"
                                ]
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.ignore": {
                        "markdownDescription": "要忽略的`cargo check`（或`check.command`指定的其他命令）诊断列表。\n\n例如对于`cargo check`：`dead_code`、`unused_imports`、`unused_variables`，等等。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "uniqueItems": true
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.invocationStrategy": {
                        "markdownDescription": "指定运行检查命令时使用的调用策略。\n如果设置为`per_workspace`，则命令将为每个工作空间执行。\n如果设置为`once`，则命令将执行一次。\n此配置仅在设置`#rust-analyzer.check.overrideCommand#`时生效。",
                        "default": "per_workspace",
                        "type": "string",
                        "enum": [
                            "per_workspace",
                            "once"
                        ],
                        "enumDescriptions": [
                            "命令将为每个Rust工作空间执行，工作空间作为工作目录。",
                            "命令将执行一次，打开的项目作为工作目录。"
                        ]
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.noDefaultFeatures": {
                        "markdownDescription": "是否向Cargo传递`--no-default-features`。默认为\n`#rust-analyzer.cargo.noDefaultFeatures#`。",
                        "default": null,
                        "type": [
                            "null",
                            "boolean"
                        ]
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.overrideCommand": {
                        "markdownDescription": "覆盖rust-analyzer用于保存时诊断的命令，而不是使用`cargo check`。命令需要输出json，\n因此应包含`--message-format=json`或类似选项\n（如果您的客户端支持`colorDiagnosticOutput`实验功能，您可以使用`--message-format=json-diagnostic-rendered-ansi`）。\n\n如果您因为使用某些包装Cargo的工具而更改此设置，您可能还需要更改\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`。\n\n如果有多个链接的项目/工作空间，此命令将为每个项目/工作空间调用，工作目录为工作空间根目录\n（即包含`Cargo.toml`的文件夹）。这可以通过更改`#rust-analyzer.check.invocationStrategy#`来覆盖。\n\n如果命令中包含`$saved_file`，rust-analyzer将传递保存文件的绝对路径给提供的命令。这是\n用于非Cargo构建系统。\n请注意`$saved_file`是实验性的，未来可能会被移除。\n\n一个示例命令可能是：\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n。",
                        "default": null,
                        "type": [
                            "null",
                            "array"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.targets": {
                        "markdownDescription": "检查特定目标。如果为空，默认为`#rust-analyzer.cargo.target#`。\n\n可以是单个目标，例如`\"x86_64-unknown-linux-gnu\"`，或目标列表，例如\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`。\n\n别名为`\"checkOnSave.targets\"`。",
                        "default": null,
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "title": "check",
                "properties": {
                    "rust-analyzer.check.workspace": {
                        "markdownDescription": "是否向`cargo check`传递`--workspace`。\n如果为false，将传递`-p <package>`代替。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.addSemicolonToUnit": {
                        "markdownDescription": "在完成返回单元值的函数时是否自动添加分号。\n\n在`match`臂中，它将改为完成逗号。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.autoimport.enable": {
                        "markdownDescription": "切换额外的补全功能，这些功能在完成时自动添加导入。\n请注意，您的客户端必须指定`additionalTextEdits` LSP客户端功能，才能真正启用此功能。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.autoself.enable": {
                        "markdownDescription": "切换额外的补全功能，这些功能在方法内部自动显示带有`self`前缀的方法调用和字段访问。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.callable.snippets": {
                        "markdownDescription": "在完成函数时是否添加括号和参数片段。",
                        "default": "fill_arguments",
                        "type": "string",
                        "enum": [
                            "fill_arguments",
                            "add_parentheses",
                            "none"
                        ],
                        "enumDescriptions": [
                            "添加调用括号并预填充参数。",
                            "添加调用括号。",
                            "不对可调用项进行片段补全。"
                        ]
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.fullFunctionSignatures.enable": {
                        "markdownDescription": "是否在补全文档中显示完整的函数/方法签名。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.hideDeprecated": {
                        "markdownDescription": "是否从自动补全中省略已弃用的项。默认情况下，它们被标记为已弃用，但不会被隐藏。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.limit": {
                        "markdownDescription": "要返回的补全的最大数量。如果为`None`，则限制为无限。",
                        "default": null,
                        "type": [
                            "null",
                            "integer"
                        ],
                        "minimum": 0
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.postfix.enable": {
                        "markdownDescription": "是否显示后缀片段，如`dbg`、`if`、`not`等。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.privateEditable.enable": {
                        "markdownDescription": "启用在当前工作空间中定义的私有项和字段的补全，即使它们在当前位置不可见。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
                        {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.snippets.custom": {
                        "markdownDescription": "自定义完成片段。",
                        "default": {
                            "Ok": {
                                "postfix": "ok",
                                "body": "Ok(${receiver})",
                                "description": "将表达式包装在 `Result::Ok` 中",
                                "scope": "expr"
                            },
                            "Box::pin": {
                                "postfix": "pinbox",
                                "body": "Box::pin(${receiver})",
                                "requires": "std::boxed::Box",
                                "description": "将表达式放入固定 `Box` 中",
                                "scope": "expr"
                            },
                            "Arc::new": {
                                "postfix": "arc",
                                "body": "Arc::new(${receiver})",
                                "requires": "std::sync::Arc",
                                "description": "将表达式放入 `Arc` 中",
                                "scope": "expr"
                            },
                            "Some": {
                                "postfix": "some",
                                "body": "Some(${receiver})",
                                "description": "将表达式包装在 `Option::Some` 中",
                                "scope": "expr"
                            },
                            "Err": {
                                "postfix": "err",
                                "body": "Err(${receiver})",
                                "description": "将表达式包装在 `Result::Err` 中",
                                "scope": "expr"
                            },
                            "Rc::new": {
                                "postfix": "rc",
                                "body": "Rc::new(${receiver})",
                                "requires": "std::rc::Rc",
                                "description": "将表达式放入 `Rc` 中",
                                "scope": "expr"
                            }
                        },
                        "type": "object"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.termSearch.enable": {
                        "markdownDescription": "是否启用基于术语搜索的片段，如 `Some(foo.bar().baz())`。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "completion",
                "properties": {
                    "rust-analyzer.completion.termSearch.fuel": {
                        "markdownDescription": "自动补全的术语搜索燃料工作单位（默认为1000）。",
                        "default": 1000,
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.disabled": {
                        "markdownDescription": "要禁用的rust-analyzer诊断列表。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "uniqueItems": true
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.enable": {
                        "markdownDescription": "是否显示原生rust-analyzer诊断。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.experimental.enable": {
                        "markdownDescription": "是否显示可能比平常有更多的误报的实验性rust-analyzer诊断。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.remapPrefix": {
                        "markdownDescription": "解析诊断文件路径时需要替换的前缀映射。\n这应该是传递给 `rustc` 的 `--remap-path-prefix` 的反向映射。",
                        "default": {},
                        "type": "object"
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.styleLints.enable": {
                        "markdownDescription": "是否运行额外的风格lints。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.warningsAsHint": {
                        "markdownDescription": "应以提示严重性显示的警告列表。\n\n这些警告将在代码中以褪色文本或三个点表示\n并且不会出现在`Problems Panel`中。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "diagnostics",
                "properties": {
                    "rust-analyzer.diagnostics.warningsAsInfo": {
                        "markdownDescription": "应以信息严重性显示的警告列表。\n\n这些警告将在代码中以蓝色波浪下划线表示\n并且在`Problems Panel`中以蓝色图标显示。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "files",
                "properties": {
                    "rust-analyzer.files.excludeDirs": {
                        "markdownDescription": "这些目录将被rust-analyzer忽略。它们相对于工作空间根目录，不支持通配符。您可能\n还需要将这些文件夹添加到Code的`files.watcherExclude`。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "files",
                "properties": {
                    "rust-analyzer.files.watcher": {
                        "markdownDescription": "控制文件监视实现。",
                        "default": "client",
                        "type": "string",
                        "enum": [
                            "client",
                            "server"
                        ],
                        "enumDescriptions": [
                            "使用客户端（编辑器）监视文件更改",
                            "使用服务器端文件监视"
                        ]
                    }
                }
            },
            {
                "title": "highlightRelated",
                "properties": {
                    "rust-analyzer.highlightRelated.breakPoints.enable": {
                        "markdownDescription": "启用在光标位于`break`、`loop`、`while`或`for`关键字时高亮显示相关引用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "highlightRelated",
                "properties": {
                    "rust-analyzer.highlightRelated.closureCaptures.enable": {
                        "markdownDescription": "启用在光标位于闭包的`|`或移动关键字时高亮显示闭包的所有捕获。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "highlightRelated",
                "properties": {
                    "rust-analyzer.highlightRelated.exitPoints.enable": {
                        "markdownDescription": "启用在光标位于任何`return`、`?`、`fn`或返回类型箭头（`->`）时高亮显示所有退出点。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "highlightRelated",
                "properties": {
                    "rust-analyzer.highlightRelated.references.enable": {
                        "markdownDescription": "启用在光标位于任何标识符时高亮显示相关引用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "highlightRelated",
                "properties": {
                    "rust-analyzer.highlightRelated.yieldPoints.enable": {
                        "markdownDescription": "启用在光标位于任何`async`或`await`关键字时高亮显示循环或块上下文的所有断点。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
                        {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.actions.debug.enable": {
                        "markdownDescription": "是否显示`Debug`操作。仅在设置`#rust-analyzer.hover.actions.enable#`时适用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.actions.enable": {
                        "markdownDescription": "是否在Rust文件中显示HoverActions。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.actions.gotoTypeDef.enable": {
                        "markdownDescription": "是否显示`Go to Type Definition`操作。仅在设置`#rust-analyzer.hover.actions.enable#`时适用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.actions.implementations.enable": {
                        "markdownDescription": "是否显示`Implementations`操作。仅在设置`#rust-analyzer.hover.actions.enable#`时适用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.actions.references.enable": {
                        "markdownDescription": "是否显示`References`操作。仅在设置`#rust-analyzer.hover.actions.enable#`时适用。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.actions.run.enable": {
                        "markdownDescription": "是否显示`Run`操作。仅在设置`#rust-analyzer.hover.actions.enable#`时适用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.documentation.enable": {
                        "markdownDescription": "是否在悬停时显示文档。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.documentation.keywords.enable": {
                        "markdownDescription": "是否显示关键字悬停弹窗。仅在设置`#rust-analyzer.hover.documentation.enable#`时适用。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.links.enable": {
                        "markdownDescription": "在悬停时使用Markdown语法显示链接。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.memoryLayout.alignment": {
                        "markdownDescription": "在内存布局悬停中如何呈现对齐信息。",
                        "default": "hexadecimal",
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "both",
                                    "decimal",
                                    "hexadecimal"
                                ],
                                "enumDescriptions": [
                                    "以12 (0xC)的形式呈现",
                                    "以12的形式呈现",
                                    "以0xC的形式呈现"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.memoryLayout.enable": {
                        "markdownDescription": "是否在悬停时显示内存布局数据。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.memoryLayout.niches": {
                        "markdownDescription": "在内存布局悬停中如何呈现细节信息。",
                        "default": false,
                        "type": [
                            "null",
                            "boolean"
                        ]
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.memoryLayout.offset": {
                        "markdownDescription": "在内存布局悬停中如何呈现偏移信息。",
                        "default": "hexadecimal",
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "both",
                                    "decimal",
                                    "hexadecimal"
                                ],
                                "enumDescriptions": [
                                    "以12 (0xC)的形式呈现",
                                    "以12的形式呈现",
                                    "以0xC的形式呈现"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.memoryLayout.size": {
                        "markdownDescription": "在内存布局悬停中如何呈现大小信息。",
                        "default": "both",
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "both",
                                    "decimal",
                                    "hexadecimal"
                                ],
                                "enumDescriptions": [
                                    "以12 (0xC)的形式呈现",
                                    "以12的形式呈现",
                                    "以0xC的形式呈现"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.show.enumVariants": {
                        "markdownDescription": "在悬停时显示枚举的变体数量。如果为空，则不显示。",
                        "default": 5,
                        "type": [
                            "null",
                            "integer"
                        ],
                        "minimum": 0
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.show.fields": {
                        "markdownDescription": "在悬停时显示结构体、变体或联合的字段数量。如果为空，则不显示。",
                        "default": 5,
                        "type": [
                            "null",
                            "integer"
                        ],
                        "minimum": 0
                    }
                }
            },
            {
                "title": "hover",
                "properties": {
                    "rust-analyzer.hover.show.traitAssocItems": {
                        "markdownDescription": "在悬停时显示特质的关联项数量。",
                        "default": null,
                        "type": [
                            "null",
                            "integer"
                        ],
                        "minimum": 0
                    }
                }
            },
                        {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.granularity.enforce": {
                        "markdownDescription": "是否对所有文件强制执行导入粒度设置。如果设置为false，rust-analyzer将尝试保持每个文件的导入风格一致。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.granularity.group": {
                        "markdownDescription": "应该如何将导入分组到use语句中。",
                        "default": "crate",
                        "type": "string",
                        "enum": [
                            "preserve",
                            "crate",
                            "module",
                            "item",
                            "one"
                        ],
                        "enumDescriptions": [
                            "不改变任何导入的粒度，并保留开发者原始编写的结构。",
                            "将来自同一crate的导入合并为单个use语句。相反，来自不同crate的导入被分成单独的语句。",
                            "将来自同一模块的导入合并为单个use语句。相反，来自不同模块的导入被分成单独的语句。",
                            "将导入展平，使得每个导入都有自己的use语句。",
                            "只要它们具有相同的可见性和属性，就将所有导入合并为单个use语句。"
                        ]
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.group.enable": {
                        "markdownDescription": "根据[以下顺序](https://rust-analyzer.github.io/manual.html#auto-import)对插入的导入进行分组。组之间用新行分隔。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.merge.glob": {
                        "markdownDescription": "是否允许导入插入将新导入合并到单个路径全局导入中，如`use std::fmt::*;`。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.preferNoStd": {
                        "markdownDescription": "优先无条件地使用核心和alloc crate的导入，而不是std crate。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.preferPrelude": {
                        "markdownDescription": "是否优先选择包含`prelude`模块的导入路径。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.prefix": {
                        "markdownDescription": "新插入路径使用的路径结构。",
                        "default": "plain",
                        "type": "string",
                        "enum": [
                            "plain",
                            "self",
                            "crate"
                        ],
                        "enumDescriptions": [
                            "相对于当前模块插入导入路径，如果父模块包含请求的项，则使用最多一个`super`前缀。",
                            "相对于当前模块插入导入路径，如果父模块包含请求的项，则使用最多一个`super`前缀。如果路径以模块开头，则在路径前加上`self`前缀。",
                            "通过始终以`crate`或它们来自的外部crate名称开头，强制导入路径为绝对路径。"
                        ]
                    }
                }
            },
            {
                "title": "imports",
                "properties": {
                    "rust-analyzer.imports.prefixExternPrelude": {
                        "markdownDescription": "是否用`::`前缀外部（包括std、core）crate导入。例如\"use ::std::io::Read;\"。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.bindingModeHints.enable": {
                        "markdownDescription": "是否显示绑定模式的内联类型提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.chainingHints.enable": {
                        "markdownDescription": "是否显示方法链的内联类型提示。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.closingBraceHints.enable": {
                        "markdownDescription": "是否在闭合的`}`后显示内联提示，以指示它属于哪个项。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.closingBraceHints.minLines": {
                        "markdownDescription": "在`}`之前所需的最少行数，直到显示提示（设置为0或1以始终显示它们）。",
                        "default": 25,
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.closureCaptureHints.enable": {
                        "markdownDescription": "是否显示闭包捕获的内联提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.closureReturnTypeHints.enable": {
                        "markdownDescription": "是否显示闭包返回类型的内联类型提示。",
                        "default": "never",
                        "type": "string",
                        "enum": [
                            "always",
                            "never",
                            "with_block"
                        ],
                        "enumDescriptions": [
                            "始终显示闭包返回类型的类型提示。",
                            "从不显示闭包返回类型的类型提示。",
                            "仅当闭包具有块时显示闭包返回类型的类型提示。"
                        ]
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.closureStyle": {
                        "markdownDescription": "类型和链式内联提示中的闭包表示法。",
                        "default": "impl_fn",
                        "type": "string",
                        "enum": [
                            "impl_fn",
                            "rust_analyzer",
                            "with_id",
                            "hide"
                        ],
                        "enumDescriptions": [
                            "`impl_fn`: `impl FnMut(i32, u64) -> i8`",
                            "`rust_analyzer`: `|i32, u64| -> i8`",
                            "`with_id`: `{closure#14352}`, 其中该id是r-a内部闭包的唯一编号",
                            "`hide`: 对于每个闭包类型显示`...`"
                        ]
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.discriminantHints.enable": {
                        "markdownDescription": "是否显示枚举变体的区分符提示。",
                        "default": "never",
                        "type": "string",
                        "enum": [
                            "always",
                            "never",
                            "fieldless"
                        ],
                        "enumDescriptions": [
                            "始终显示所有区分符提示。",
                            "从不显示区分符提示。",
                            "仅在无字段的枚举变体上显示区分符提示。"
                        ]
                    }
                }
            },
                        {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": {
                        "markdownDescription": "是否显示类型调整的内联提示。",
                        "default": "never",
                        "type": "string",
                        "enum": [
                            "always",
                            "never",
                            "reborrow"
                        ],
                        "enumDescriptions": [
                            "始终显示所有调整提示。",
                            "从不显示调整提示。",
                            "仅显示自动借用和解引用调整提示。"
                        ]
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe": {
                        "markdownDescription": "是否在`unsafe`块外部隐藏类型调整的内联提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.expressionAdjustmentHints.mode": {
                        "markdownDescription": "是否以内缀操作符的形式显示内联提示（例如`.*`而不是`*`等）。",
                        "default": "prefix",
                        "type": "string",
                        "enum": [
                            "prefix",
                            "postfix",
                            "prefer_prefix",
                            "prefer_postfix"
                        ],
                        "enumDescriptions": [
                            "始终以内缀形式显示调整提示（`*expr`）。",
                            "始终以外缀形式显示调整提示（`expr.*`）。",
                            "根据使用最少括号的方式显示内缀或外缀，优先选择内缀。",
                            "根据使用最少括号的方式显示内缀或外缀，优先选择外缀。"
                        ]
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.genericParameterHints.const.enable": {
                        "markdownDescription": "是否显示const泛型参数名称的内联提示。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.genericParameterHints.lifetime.enable": {
                        "markdownDescription": "是否显示泛型生命周期参数名称的内联提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.genericParameterHints.type.enable": {
                        "markdownDescription": "是否显示泛型类型参数名称的内联提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.implicitDrops.enable": {
                        "markdownDescription": "是否显示隐式丢弃的内联提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.lifetimeElisionHints.enable": {
                        "markdownDescription": "是否在函数签名中显示省略生命周期的内联类型提示。",
                        "default": "never",
                        "type": "string",
                        "enum": [
                            "always",
                            "never",
                            "skip_trivial"
                        ],
                        "enumDescriptions": [
                            "始终显示生命周期省略提示。",
                            "从不显示生命周期省略提示。",
                            "仅当涉及返回类型时显示生命周期省略提示。"
                        ]
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": {
                        "markdownDescription": "如果可能，是否优先使用参数名称作为省略生命周期提示的名称。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.maxLength": {
                        "markdownDescription": "内联提示的最大长度。设置为null则表示无限制。",
                        "default": 25,
                        "type": [
                            "null",
                            "integer"
                        ],
                        "minimum": 0
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.parameterHints.enable": {
                        "markdownDescription": "是否在函数调用现场显示函数参数名称的内联提示。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.rangeExclusiveHints.enable": {
                        "markdownDescription": "是否显示独占范围的内联提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.reborrowHints.enable": {
                        "markdownDescription": "是否显示编译器插入的重新借用的内联提示。\n这个设置已被 #rust-analyzer.inlayHints.expressionAdjustmentHints.enable# 替代。",
                        "default": "never",
                        "type": "string",
                        "enum": [
                            "always",
                            "never",
                            "mutable"
                        ],
                        "enumDescriptions": [
                            "始终显示重新借用提示。",
                            "从不显示重新借用提示。",
                            "仅显示可变重新借用提示。"
                        ]
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.renderColons": {
                        "markdownDescription": "是否渲染类型提示前的冒号和参数提示后的冒号。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.typeHints.enable": {
                        "markdownDescription": "是否显示变量的内联类型提示。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": {
                        "markdownDescription": "是否隐藏初始化为闭包的`let`语句的内联类型提示。\n只适用于有块的闭包，与`#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`相同。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "inlayHints",
                "properties": {
                    "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": {
                        "markdownDescription": "是否隐藏构造函数的内联类型提示。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "interpret",
                "properties": {
                    "rust-analyzer.interpret.tests": {
                        "markdownDescription": "启用解释测试的实验性支持。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "joinLines",
                "properties": {
                    "rust-analyzer.joinLines.joinAssignments": {
                        "markdownDescription": "合并连续的声明和初始化赋值。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
                        {
                "title": "joinLines",
                "properties": {
                    "rust-analyzer.joinLines.joinElseIf": {
                        "markdownDescription": "合并连续的if语句中的else部分。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "joinLines",
                "properties": {
                    "rust-analyzer.joinLines.removeTrailingComma": {
                        "markdownDescription": "合并行时移除尾随逗号。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "joinLines",
                "properties": {
                    "rust-analyzer.joinLines.unwrapTrivialBlock": {
                        "markdownDescription": "合并行时展开简单的代码块。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.debug.enable": {
                        "markdownDescription": "是否显示`Debug`镜头。仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.enable": {
                        "markdownDescription": "是否在Rust文件中显示CodeLens。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.implementations.enable": {
                        "markdownDescription": "是否显示`Implementations`镜头。仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.location": {
                        "markdownDescription": "在哪里渲染注释。",
                        "default": "above_name",
                        "type": "string",
                        "enum": [
                            "above_name",
                            "above_whole_item"
                        ],
                        "enumDescriptions": [
                            "在项的名称上方渲染注释。",
                            "在整个项上方渲染注释，包括文档注释和属性。"
                        ]
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.references.adt.enable": {
                        "markdownDescription": "是否为结构体、枚举和联合显示`References`镜头。\n仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.references.enumVariant.enable": {
                        "markdownDescription": "是否为枚举变体显示`References`镜头。\n仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.references.method.enable": {
                        "markdownDescription": "是否显示`Method References`镜头。\n仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.references.trait.enable": {
                        "markdownDescription": "是否为Trait显示`References`镜头。\n仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "lens",
                "properties": {
                    "rust-analyzer.lens.run.enable": {
                        "markdownDescription": "是否显示`Run`镜头。\n仅在设置`#rust-analyzer.lens.enable#`时生效。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "general",
                "properties": {
                    "rust-analyzer.linkedProjects": {
                        "markdownDescription": "禁用项目自动发现，改为显式指定一组项目。\n\n元素必须是指向`Cargo.toml`、\n`rust-project.json`、`.rs`文件（将被视为独立文件）或JSON\n对象在`rust-project.json`格式中的路径。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": [
                                "string",
                                "object"
                            ]
                        }
                    }
                }
            },
            {
                "title": "lru",
                "properties": {
                    "rust-analyzer.lru.capacity": {
                        "markdownDescription": "rust-analyzer在内存中保持的语法树数量。默认为128。",
                        "default": null,
                        "type": [
                            "null",
                            "integer"
                        ],
                        "minimum": 0,
                        "maximum": 65535
                    }
                }
            },
            {
                "title": "lru",
                "properties": {
                    "rust-analyzer.lru.query.capacities": {
                        "markdownDescription": "设置指定查询的LRU容量。",
                        "default": {},
                        "type": "object"
                    }
                }
            },
            {
                "title": "notifications",
                "properties": {
                    "rust-analyzer.notifications.cargoTomlNotFound": {
                        "markdownDescription": "是否显示`找不到Cargo.toml`错误消息。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "general",
                "properties": {
                    "rust-analyzer.numThreads": {
                        "markdownDescription": "主循环中的工作线程数量。默认`null`表示自动选择。",
                        "default": null,
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 255
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "physical",
                                    "logical"
                                ],
                                "enumDescriptions": [
                                    "使用物理核心数量",
                                    "使用逻辑核心数量"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "title": "procMacro",
                "properties": {
                    "rust-analyzer.procMacro.attributes.enable": {
                        "markdownDescription": "展开属性宏。需要设置`#rust-analyzer.procMacro.enable#`。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "procMacro",
                "properties": {
                    "rust-analyzer.procMacro.enable": {
                        "markdownDescription": "启用对过程宏的支持，意味着`#rust-analyzer.cargo.buildScripts.enable#`。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "procMacro",
                "properties": {
                    "rust-analyzer.procMacro.ignored": {
                        "markdownDescription": "在尝试展开时将忽略这些proc-macros。\n\n此配置接受一个映射，键是crate名称，值是要忽略的导出的proc-macro名称。",
                        "default": {},
                        "type": "object"
                    }
                }
            },
            {
                "title": "procMacro",
                "properties": {
                    "rust-analyzer.procMacro.server": {
                        "markdownDescription": "内部配置，proc-macro服务器可执行文件的路径。",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "references",
                "properties": {
                    "rust-analyzer.references.excludeImports": {
                        "markdownDescription": "从查找所有引用中排除导入。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "references",
                "properties": {
                    "rust-analyzer.references.excludeTests": {
                        "markdownDescription": "从查找所有引用和调用层级中排除测试。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
                        {
                "title": "runnables",
                "properties": {
                    "rust-analyzer.runnables.command": {
                        "markdownDescription": "执行可运行文件时代替'cargo'的命令。",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "runnables",
                "properties": {
                    "rust-analyzer.runnables.extraArgs": {
                        "markdownDescription": "传递给cargo的额外参数，适用于可运行文件，例如测试或二进制文件。例如，可以是`--release`。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "runnables",
                "properties": {
                    "rust-analyzer.runnables.extraTestBinaryArgs": {
                        "markdownDescription": "通过Cargo传递给启动测试、基准测试或文档测试的额外参数。\n\n除非启动的目标使用\n[自定义测试框架](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-harness-field)，\n否则它们将被视为\n[`rustc`内置测试框架（“libtest”）](https://doc.rust-lang.org/rustc/tests/index.html#cli-arguments)的选项。",
                        "default": [
                            "--show-output"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "rustc",
                "properties": {
                    "rust-analyzer.rustc.source": {
                        "markdownDescription": "rust编译器工作区的Cargo.toml的路径，用于rustc_private项目，或者设置为\"discover\"以尝试在安装了`rustc-dev`组件时自动找到它。\n\n任何使用rust-analyzer与rustcPrivate\ncrates的项目必须设置`[package.metadata.rust-analyzer] rustc_private=true`才能使用它。\n\n此选项在rust-analyzer重启后生效。",
                        "default": null,
                        "type": [
                            "null",
                            "string"
                        ]
                    }
                }
            },
            {
                "title": "rustfmt",
                "properties": {
                    "rust-analyzer.rustfmt.extraArgs": {
                        "markdownDescription": "传递给`rustfmt`的额外参数。",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "rustfmt",
                "properties": {
                    "rust-analyzer.rustfmt.overrideCommand": {
                        "markdownDescription": "高级选项，完全覆盖rust-analyzer用于格式化的命令。这里应该是`rustfmt`的等效命令，而不是`cargo fmt`的。文件内容将通过标准输入传递，格式化结果将从标准输出读取。",
                        "default": null,
                        "type": [
                            "null",
                            "array"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "title": "rustfmt",
                "properties": {
                    "rust-analyzer.rustfmt.rangeFormatting.enable": {
                        "markdownDescription": "启用rustfmt不稳定的区间格式化命令用于`textDocument/rangeFormatting`请求。rustfmt选项是不稳定的，只在夜间构建中可用。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.doc.comment.inject.enable": {
                        "markdownDescription": "在文档注释中注入额外的高亮显示。\n\n启用后，rust-analyzer将高亮显示文档注释中的Rust源代码以及文档内的链接。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.nonStandardTokens": {
                        "markdownDescription": "服务器是否允许发出非标准令牌和修饰符。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.operator.enable": {
                        "markdownDescription": "为操作符使用语义标记。\n\n禁用时，rust-analyzer只有在操作符被标记为修饰符时才会发出语义标记。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.operator.specialization.enable": {
                        "markdownDescription": "为操作符使用专门的语义标记。\n\n启用后，rust-analyzer将发出特殊的标记类型用于操作符，而不是通用的`operator`标记类型。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.punctuation.enable": {
                        "markdownDescription": "为标点符号使用语义标记。\n\n禁用时，rust-analyzer只有在标点符号被标记为修饰符或具有特殊角色时才会发出语义标记。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang": {
                        "markdownDescription": "启用后，rust-analyzer将为宏调用的`!`发出一个标点语义标记。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.punctuation.specialization.enable": {
                        "markdownDescription": "为标点符号使用专门的语义标记。\n\n启用后，rust-analyzer将发出特殊的标记类型用于标点符号，而不是通用的`punctuation`标记类型。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "semanticHighlighting",
                "properties": {
                    "rust-analyzer.semanticHighlighting.strings.enable": {
                        "markdownDescription": "为字符串使用语义标记。\n\n在某些编辑器（例如vscode）中，语义标记会覆盖其他高亮显示语法。\n通过禁用字符串的语义标记，可以使用其他语法来高亮显示它们的内容。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "signatureInfo",
                "properties": {
                    "rust-analyzer.signatureInfo.detail": {
                        "markdownDescription": "显示可调用项的完整签名。如果禁用，则仅显示参数。",
                        "default": "full",
                        "type": "string",
                        "enum": [
                            "full",
                            "parameters"
                        ],
                        "enumDescriptions": [
                            "显示整个签名。",
                            "仅显示参数。"
                        ]
                    }
                }
            },
            {
                "title": "signatureInfo",
                "properties": {
                    "rust-analyzer.signatureInfo.documentation.enable": {
                        "markdownDescription": "显示文档。",
                        "default": true,
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "typing",
                "properties": {
                    "rust-analyzer.typing.autoClosingAngleBrackets.enable": {
                        "markdownDescription": "在输入泛型参数列表的开角括号时，是否插入闭角括号。",
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
                        {
                "title": "workspace",
                "properties": {
                    "rust-analyzer.workspace.discoverConfig": {
                        "markdownDescription": "启用使用[`DiscoverWorkspaceConfig::command`]的自动项目发现。\n\n[`DiscoverWorkspaceConfig`]还需要设置`progress_label`和`files_to_watch`。\n`progress_label`用于进度指示器中的标题，而`files_to_watch`\n用于确定需要监视哪些特定于构建系统的文件以便重新加载rust-analyzer。\n\n以下是一个有效的配置示例：\n```json\n\"rust-analyzer.workspace.discoverConfig\": {\n        \"command\": [\n                \"rust-project\",\n                \"develop-json\"\n        ],\n        \"progressLabel\": \"rust-analyzer\",\n        \"filesToWatch\": [\n                \"BUCK\"\n        ]\n}\n```\n\n## 关于`DiscoverWorkspaceConfig::command`\n\n**警告**：此格式是临时的，可能会更改。\n\n[`DiscoverWorkspaceConfig::command`]*必须*返回一个JSON对象\n对应于`DiscoverProjectData::Finished`：\n\n```norun\n#[derive(Debug, Clone, Deserialize, Serialize)]\n#[serde(tag = \"kind\")]\n#[serde(rename_all = \"snake_case\")]\nenum DiscoverProjectData {\n        Finished { buildfile: Utf8PathBuf, project: ProjectJsonData },\n        Error { error: String, source: Option<String> },\n        Progress { message: String },\n}\n```\n\n作为JSON，`DiscoverProjectData::Finished`是：\n\n```json\n{\n        // 枚举的内部标记表示。\n        \"kind\": \"finished\",\n        // 非Cargo构建系统用于定义\n        // 包或目标的文件。\n        \"buildfile\": \"rust-analyzer/BUILD\",\n        // rust-project.json的内容，为简洁起见省略\n        \"project\": {\n                \"sysroot\": \"foo\",\n                \"crates\": []\n        }\n}\n```\n\n鼓励但不要求使用`DiscoverProjectData`的其他变体\n以提供更完善的最终用户体验。\n\n`DiscoverWorkspaceConfig::command`可以*选择性地*包含一个`{arg}`,\n它将被替换为以下枚举的JSON序列化形式：\n\n```norun\n#[derive(PartialEq, Clone, Debug, Serialize)]\n#[serde(rename_all = \"camelCase\")]\npub enum DiscoverArgument {\n     Path(AbsPathBuf),\n     Buildfile(AbsPathBuf),\n}\n```\n\n`DiscoverArgument::Path`的JSON表示是：\n\n```json\n{\n        \"path\": \"src/main.rs\"\n}\n```\n\n类似地，`DiscoverArgument::Buildfile`的JSON表示是：\n\n```\n{\n        \"buildfile\": \"BUILD\"\n}\n```\n\n`DiscoverArgument::Path`用于查找和生成`rust-project.json`，\n因此，一个工作空间，而`DiscoverArgument::buildfile`用于\n更新现有工作空间。作为实现者的参考，\nbuck2的`rust-project`可能会很有用：\nhttps://github.com/facebook/buck2/tree/main/integrations/rust-project.", 
                        "default": null,
                        "anyOf": [
                            {
                                "type": "null"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "command": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "progressLabel": {
                                        "type": "string"
                                    },
                                    "filesToWatch": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            {
                "title": "workspace",
                "properties": {
                    "rust-analyzer.workspace.symbol.search.kind": {
                        "markdownDescription": "工作区符号搜索类型。",
                        "default": "only_types",
                        "type": "string",
                        "enum": [
                            "only_types",
                            "all_symbols"
                        ],
                        "enumDescriptions": [
                            "仅搜索类型。",
                            "搜索所有符号类型。"
                        ]
                    }
                }
            },
            {
                "title": "workspace",
                "properties": {
                    "rust-analyzer.workspace.symbol.search.limit": {
                        "markdownDescription": "限制工作区符号搜索返回的项目数量（默认为128）。\n一些客户端如vs-code在结果过滤时会发出新的搜索，不需要在初始搜索中返回所有结果。\n其他客户端需要预先获取所有结果，可能需要更高的限制。",
                        "default": 128,
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            {
                "title": "workspace",
                "properties": {
                    "rust-analyzer.workspace.symbol.search.scope": {
                        "markdownDescription": "工作区符号搜索范围。",
                        "default": "workspace",
                        "type": "string",
                        "enum": [
                            "workspace",
                            "workspace_and_dependencies"
                        ],
                        "enumDescriptions": [
                            "仅在当前工作区搜索。",
                            "在当前工作区及其依赖中搜索。"
                        ]
                    }
                }
            },
            {
                
            }
        ],
        "configurationDefaults": {
            "explorer.fileNesting.patterns": {
                "Cargo.toml": "Cargo.lock"
            }
        },
        "problemPatterns": [
            {
                "name": "rustc",
                "patterns": [
                    {
                        "regexp": "^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$",
                        "severity": 1,
                        "code": 2,
                        "message": 3
                    },
                    {
                        "regexp": "^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$",
                        "file": 1,
                        "line": 2,
                        "column": 3
                    }
                ]
            },
            {
                "name": "rustc-json",
                "patterns": [
                    {
                        "regexp": "^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$",
                        "message": 1,
                        "file": 2,
                        "line": 3,
                        "endLine": 4,
                        "column": 5,
                        "endColumn": 6
                    }
                ]
            },
            {
                "name": "rust-panic",
                "patterns": [
                    {
                        "regexp": "^thread '.*' panicked at (.*):(\\d*):(\\d*):$",
                        "file": 1,
                        "line": 2,
                        "column": 3
                    },
                    {
                        "regexp": "(.*)",
                        "message": 1
                    }
                ]
            }
        ],
        "languages": [
            {
                "id": "ra_syntax_tree",
                "extensions": [
                    ".rast"
                ]
            },
            {
                "id": "rust",
                "extensions": [
                    ".rs"
                ],
                "aliases": [
                    "Rust",
                    "rs"
                ],
                "configuration": "language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "ra_syntax_tree",
                "scopeName": "source.ra_syntax_tree",
                "path": "ra_syntax_tree.tmGrammar.json"
            }
        ],
        "problemMatchers": [
            {
                "name": "rustc",
                "owner": "rustc",
                "source": "rustc",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceRoot}"
                ],
                "pattern": "$rustc"
            },
            {
                "name": "rustc-json",
                "owner": "rustc",
                "source": "rustc",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceRoot}"
                ],
                "pattern": "$rustc-json"
            },
            {
                "name": "rust-panic",
                "owner": "rust-panic",
                "source": "panic",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceRoot}"
                ],
                "pattern": "$rust-panic"
            },
            {
                "name": "rustc-watch",
                "owner": "rustc",
                "source": "rustc",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceRoot}"
                ],
                "background": {
                    "beginsPattern": "^\\[Running\\b",
                    "endsPattern": "^\\[Finished running\\b"
                },
                "pattern": "$rustc"
            }
        ],
        "colors": [
            {
                "id": "rust_analyzer.syntaxTreeBorder",
                "description": "在Rust源代码中为选定的语法节点显示的边框颜色（见“显示语法树”命令）",
                "defaults": {
                    "dark": "#ffffff",
                    "light": "#b700ff",
                    "highContrast": "#b700ff"
                }
            }
        ],
        "semanticTokenTypes": [
            {
                "id": "angle",
                "description": "<或>的样式",
                "superType": "punctuation"
            },
            {
                "id": "arithmetic",
                "description": "算术操作符的样式",
                "superType": "operator"
            },
            {
                "id": "attribute",
                "description": "属性的样式"
            },
            {
                "id": "attributeBracket",
                "description": "属性调用括号的样式，即`#[`和`]`标记",
                "superType": "punctuation"
            },
            {
                "id": "bitwise",
                "description": "位操作符的样式",
                "superType": "operator"
            },
            {
                "id": "boolean",
                "description": "布尔字面量的样式",
                "superType": "keyword"
            },
            {
                "id": "brace",
                "description": "{或}的样式",
                "superType": "punctuation"
            },
            {
                "id": "bracket",
                "description": "[或]的样式",
                "superType": "punctuation"
            },
            {
                "id": "builtinAttribute",
                "description": "内置属性的样式",
                "superType": "attribute"
            },
            {
                "id": "builtinType",
                "description": "内置类型的样式",
                "superType": "type"
            },
            {
                "id": "character",
                "description": "字符字面量的样式",
                "superType": "string"
            },
            {
                "id": "colon",
                "description": ":的样式",
                "superType": "punctuation"
            },
            {
                "id": "comma",
                "description": ",的样式",
                "superType": "punctuation"
            },
            {
                "id": "comparison",
                "description": "比较操作符的样式",
                "superType": "operator"
            },
            {
                "id": "constParameter",
                "description": "常量泛型的样式"
            },
            {
                "id": "const",
                "description": "常量的样式",
                "superType": "variable"
            },
            {
                "id": "derive",
                "description": "派生属性的样式",
                "superType": "attribute"
            },
            {
                "id": "deriveHelper",
                "description": "派生辅助属性的样式",
                "superType": "attribute"
            },
            {
                "id": "dot",
                "description": ".的样式",
                "superType": "punctuation"
            },
            {
                "id": "escapeSequence",
                "description": "字符串中字符或字节的转义序列的样式"
            },
            {
                "id": "formatSpecifier",
                "description": "格式化字符串中{}占位符的样式"
            },
            {
                "id": "invalidEscapeSequence",
                "description": "字符串中无效的字符或字节转义序列的样式"
            },
            {
                "id": "label",
                "description": "标签的样式"
            },
            {
                "id": "lifetime",
                "description": "生命周期的样式"
            },
            {
                "id": "logical",
                "description": "逻辑操作符的样式",
                "superType": "operator"
            },
            {
                "id": "macroBang",
                "description": "宏调用中的!标记的样式",
                "superType": "punctuation"
            },
            {
                "id": "parenthesis",
                "description": "(或)的样式",
                "superType": "punctuation"
            },
            {
                "id": "procMacro",
                "description": "过程宏代码的样式",
                "superType": "macro"
            },
            {
                "id": "punctuation",
                "description": "通用标点符号的样式"
            },
            {
                "id": "operator",
                "description": "操作符的样式",
                "superType": "punctuation"
            },
            {
                "id": "selfKeyword",
                "description": "self关键字的样式",
                "superType": "keyword"
            },
            {
                "id": "selfTypeKeyword",
                "description": "self类型关键字的样式",
                "superType": "keyword"
            },
            {
                "id": "semicolon",
                "description": ";的样式",
                "superType": "punctuation"
            },
            {
                "id": "static",
                "description": "静态变量的样式",
                "superType": "variable"
            },
            {
                "id": "toolModule",
                "description": "工具模块属性的样式",
                "superType": "decorator"
            },
            {
                "id": "typeAlias",
                "description": "类型别名的样式",
                "superType": "type"
            },
            {
                "id": "union",
                "description": "C风格无标签联合的样式",
                "superType": "type"
            },
            {
                "id": "unresolvedReference",
                "description": "由于编译错误无法解析的名称的样式"
            }
        ],
        "semanticTokenModifiers": [
            {
                "id": "async",
                "description": "异步函数和`async`、`await`关键字的样式"
            },
            {
                "id": "attribute",
                "description": "属性内部元素的样式"
            },
            {
                "id": "callable",
                "description": "类型实现了`Fn*`特征之一的局部变量的样式"
            },
            {
                "id": "constant",
                "description": "编译时常量的样式"
            },
            {
                "id": "consuming",
                "description": "在函数调用中被消耗的局部变量的样式"
            },
            {
                "id": "controlFlow",
                "description": "控制流相关标记的样式，包括`?`操作符"
            },
            {
                "id": "crateRoot",
                "description": "解析为crate根的名称的样式"
            },
            {
                "id": "injected",
                "description": "文档字符串注入高亮显示的样式，如文档中的Rust源代码块"
            },
            {
                "id": "intraDocLink",
                "description": "文档字符串中的内部文档链接的样式"
            },
            {
                "id": "library",
                "description": "在当前crate之外定义的项的样式"
            },
            {
                "id": "macro",
                "description": "宏调用内部标记的样式"
            },
            {
                "id": "mutable",
                "description": "可变局部变量和静态变量以及接受`&mut self`的函数的样式"
            },
            {
                "id": "procMacro",
                "description": "过程宏调用内部标记的样式"
            },
            {
                "id": "public",
                "description": "来自当前crate并且是`pub`的项的样式"
            },
            {
                "id": "reference",
                "description": "引用背后的局部变量和接受`self`引用的函数的样式"
            },
            {
                "id": "trait",
                "description": "关联trait项的样式"
            },
            {
                "id": "unsafe",
                "description": "不安全操作的样式，如不安全函数调用，以及`unsafe`标记"
            }
        ],
        "semanticTokenScopes": [
            {
                "language": "rust",
                "scopes": {
                    "attribute": [
                        "meta.attribute.rust"
                    ],
                    "boolean": [
                        "constant.language.boolean.rust"
                    ],
                    "builtinType": [
                        "support.type.primitive.rust"
                    ],
                    "constParameter": [
                        "constant.other.caps.rust"
                    ],
                    "enum": [
                        "entity.name.type.enum.rust"
                    ],
                    "formatSpecifier": [
                        "punctuation.section.embedded.rust"
                    ],
                    "function": [
                        "entity.name.function.rust"
                    ],
                    "interface": [
                        "entity.name.type.trait.rust"
                    ],
                    "keyword": [
                        "keyword.other.rust"
                    ],
                    "keyword.controlFlow": [
                        "keyword.control.rust"
                    ],
                    "lifetime": [
                        "storage.modifier.lifetime.rust"
                    ],
                    "macroBang": [
                        "entity.name.function.macro.rust"
                    ],
                    "method": [
                        "entity.name.function.rust"
                    ],
                    "struct": [
                        "entity.name.type.struct.rust"
                    ],
                    "typeAlias": [
                        "entity.name.type.declaration.rust"
                    ],
                    "union": [
                        "entity.name.type.union.rust"
                    ],
                    "variable": [
                        "variable.other.rust"
                    ],
                    "variable.constant": [
                        "variable.other.constant.rust"
                    ],
                    "*.mutable": [
                        "markup.underline"
                    ]
                }
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "rust-analyzer.syntaxTree",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.viewHir",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.viewFileText",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.expandMacro",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.matchingBrace",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.parentModule",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.joinLines",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.run",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.debug",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.newDebugConfig",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.analyzerStatus",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.memoryUsage",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.reloadWorkspace",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.restartServer",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.onEnter",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.ssr",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.serverVersion",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.openDocs",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.openCargoToml",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.viewMemoryLayout",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.toggleLSPLogs",
                    "when": "inRustProject"
                },
                {
                    "command": "rust-analyzer.openWalkthrough"
                }
            ],
            "editor/context": [
                {
                    "command": "rust-analyzer.peekTests",
                    "when": "inRustProject && editorTextFocus && editorLangId == rust",
                    "group": "navigation@1000"
                },
                {
                    "command": "rust-analyzer.openDocs",
                    "when": "inRustProject && editorTextFocus && editorLangId == rust",
                    "group": "navigation@1001"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "rustDependencies",
                    "name": "Rust Dependencies",
                    "when": "inRustProject && config.rust-analyzer.showDependenciesExplorer"
                }
            ]
        },
        "jsonValidation": [
            {
                "fileMatch": "rust-project.json",
                "url": "https://json.schemastore.org/rust-project.json"
            },
            {
                "fileMatch": ".rust-project.json",
                "url": "https://json.schemastore.org/rust-project.json"
            }
        ],
        "walkthroughs": [
            {
                "id": "landing",
                "title": "了解 rust-analyzer",
                "description": "简要介绍如何开始使用 rust-analyzer。了解关键特性和资源，以帮助您充分利用此扩展功能。",
                "steps": [
                    {
                        "id": "setup",
                        "title": "有用的设置提示",
                        "description": "有一些事项您可能希望提前根据您的喜好进行配置。我们会在这里列出一些，但请务必查看下面链接的文档！\n\n**将库源标记为只读**\n\n在您的settings.json中添加右侧的代码片段将把所有Rust库源标记为只读。\n\n**保存时检查**\n\n默认情况下，当您保存文件时，rust-analyzer会在您的代码库上运行``cargo check``，在代码中渲染``cargo check``发出的诊断。这可能会与其他同时运行的``cargo``命令发生冲突，阻碍它们运行一段时间。在这些情况下，建议禁用``rust-analyzer.checkOnSave``配置，改为按需运行``rust-analyzer: Run flycheck``命令。",
                        "media": {
                            "markdown": "./walkthrough-setup-tips.md"
                        }
                    },
                    {
                        "id": "docs",
                        "title": "访问文档！",
                        "description": "对配置感到困惑？想了解更多关于rust-analyzer的信息？访问[用户手册](https://rust-analyzer.github.io/manual.html)！",
                        "media": {
                            "image": "./icon.png",
                            "altText": "rust-analyzer 标志"
                        },
                        "completionEvents": [
                            "onLink:https://rust-analyzer.github.io/manual.html"
                        ]
                    },
                    {
                        "id": "faq",
                        "title": "常见问题解答",
                        "description": "为什么我的代码中被插入了这些代码提示？\n\n这些提示被称为内联提示，rust-analyzer支持此功能，并在VSCode中默认启用。如果您希望禁用它们，可以通过``editor.inlayHints.enabled``设置来实现。",
                        "media": {
                            "image": "icon.png",
                            "altText": "rust-analyzer 标志"
                        }
                    },
                    {
                        "id": "changelog",
                        "title": "更新日志",
                        "description": "了解rust-analyzer最新变化。查看更新日志[这里](https://rust-analyzer.github.io/thisweek)！",
                        "media": {
                            "image": "icon.png",
                            "altText": "rust-analyzer 标志"
                        },
                        "completionEvents": [
                            "onLink:https://rust-analyzer.github.io/thisweek"
                        ]
                    }
                ]
            }
        ]
    }
}
